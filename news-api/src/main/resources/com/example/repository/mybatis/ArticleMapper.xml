<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.repository.mybatis.ArticleMapper">

    <select id="findById" resultType="Article">
        select id, title, category, sentiment, content, views, journalist_id, topic, updated_at, likes, dislikes
        from articles
        where id = #{id}
    </select>

    <select id="findByTitle" resultType="Article">
        select id, title, category, sentiment, content, views, journalist_id, topic, updated_at, likes, dislikes
        from articles
        where title like concat('%', #{title}, '%')
    </select>

    <select id="findAll" resultType="Article">
        select id, title, category, sentiment, content, views, journalist_id, topic, updated_at, likes, dislikes
        from articles
        <where>
            <if test="category != null">
                and category = #{category}
            </if>
            <if test="sentiment != null">
                and sentiment = #{sentiment}
            </if>
            <if test="journalistId != null">
                and journalist_id = #{journalistId}
            </if>
            <if test="topic != null and topic != ''">
                and topic = #{topic}
            </if>
        </where>
        <if test="sortField != null">
            order by
            <choose>
                <when test="sortField == 'views'">
                    views desc
                </when>
                <when test="sortField == 'id'">
                    id asc
                </when>
                <when test="sortField == 'date'">
                    updated_at desc
                </when>
                <otherwise>
                    id asc
                </otherwise>
            </choose>
        </if>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into articles (title, category, sentiment, content, views, journalist_id, topic, updated_at, likes, dislikes)
        values (#{title}, #{category}, #{sentiment}, #{content}, #{views}, #{journalistId}, #{topic}, #{updatedAt}, #{likes}, #{dislikes})
    </insert>

    <delete id="deleteById">
        delete from articles where id = #{id}
    </delete>

    <delete id="clear">
        delete from articles
    </delete>

    <update id="updateLikes">
        update articles set likes = likes+1
        where id=#{id}
    </update>

    <update id="updateDislikes">
        update articles set dislikes = dislikes+1
        where id=#{id}
    </update>
</mapper>