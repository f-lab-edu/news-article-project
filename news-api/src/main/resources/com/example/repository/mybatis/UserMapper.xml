<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.repository.mybatis.UserMapper">
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into users (email,username,password)
        values (#{email}, #{username}, #{password})
    </insert>

    <select id="duplicatedUsername" resultType="Long">
        select id
        from users
        where username = #{username}
        limit 1
    </select>

    <select id="duplicatedEmail" resultType="Long">
        select id
        from users
        where email = #{email}
        limit 1
    </select>

    <select id="findById" resultType="com.example.domain.User">
        select id, email, username, password, mail_cycle
        from users
        where id = #{userId}
    </select>

    <select id="findByEmail" resultType="com.example.domain.User">
        select id, email, username, password, mail_cycle
        from users
        where email = #{email}
    </select>


    <update id="updateUser">
        update users
        set
            username = #{userUpdateDTO.username},
            password = #{userUpdateDTO.password},
            mail_cycle = #{userUpdateDTO.mailCycle}
        where id= #{userId}
    </update>

    <delete id="deleteUser">
        delete from users
        where id = #{userId}
    </delete>

    <delete id="deleteSubscription">
        delete from user_subscriptions
        where user_id = #{userId}
        <if test="category != null">
            and category = #{category}
        </if>
        <if test="topic != null and topic != ''">
            and topic = #{topic}
        </if>
    </delete>

    <insert id="insertSubscription" useGeneratedKeys="true" keyProperty="id">
        insert into user_subscriptions (user_id, category, topic)
        values (#{userId}, #{category}, #{topic})
    </insert>

    <select id="findSubscriptionByUserId" resultType="com.example.domain.UserSubscription">
        select id, user_id, category, topic
        from user_subscriptions
        where user_id = #{userId}
    </select>

    <select id="findOne" resultType="com.example.domain.UserSubscription">
        select id, user_id, category, topic
        from user_subscriptions
        where user_id = #{userId}
        <if test="category != null">
            and category = #{category}
        </if>
        <if test="topic != null and topic != ''">
            and topic = #{topic}
        </if>
    </select>

    <insert id="bulkInsertSubscriptions" useGeneratedKeys="true" keyProperty="id">
        insert into user_subscriptions (user_id, category, topic)
        values
        <foreach collection="list" item="subscription" separator=",">
            (#{subscription.userId}, #{subscription.category}, #{subscription.topic})
        </foreach>
    </insert>

    <delete id="bulkDeleteSubscriptions">
        delete from user_subscriptions
        where (user_id, category, topic) in
        <foreach item="sub" collection="subscriptions" separator="," open="(" close=")">
            (#{sub.userId}, #{sub.category}, #{sub.topic})
        </foreach>
    </delete>

</mapper>